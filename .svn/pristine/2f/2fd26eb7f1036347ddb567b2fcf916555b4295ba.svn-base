package com.yw.platform.activity;

import android.app.Activity;
import android.app.admin.DevicePolicyManager;
import android.content.ComponentName;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.widget.Toast;

import com.yw.platform.broadcastReceiver.AdminReceiver;

/**
 * Created by cxb on 2018/3/15.
 */

public class AdminActivity extends Activity {
    /**
     * 设备安全管理服务，2.2之前需要通过反射技术获取
     */
    public DevicePolicyManager devicePolicyManager = null;
    /**
     * 对应自定义DeviceAdminReceiver的组件
     */
    public ComponentName componentName = null;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        devicePolicyManager = (DevicePolicyManager) getSystemService(Context.DEVICE_POLICY_SERVICE);
        componentName = new ComponentName(this, AdminReceiver.class);
    }
    /**
     * 描述：判断是都具有管理员权限
     * @return 具有管理员权限返true，否则false
     */
    private boolean isAdminActive() {
        return devicePolicyManager.isAdminActive(componentName);
    }

    @Override
    protected void onResume() {
        super.onResume();
        if(!isAdminActive()){
            applyAdmin();
        }
    }
    /**
     * 描述：申请管理员权限
     */
    private void applyAdmin(){
        // 打备管理器的激活窗口
        Intent intent = new Intent(DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN);
        // 指定需要激活的组件
        intent.putExtra(DevicePolicyManager.EXTRA_DEVICE_ADMIN, componentName);
        intent.putExtra(DevicePolicyManager.EXTRA_ADD_EXPLANATION, "(使用前请激活窗口中的描述信息)");
        startActivityForResult(intent,9527);
        Toast.makeText(this, "为您正常使用请激活管理员权限", Toast.LENGTH_SHORT).show();
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == 9527) {
            if (resultCode == Activity.RESULT_CANCELED) {
                applyAdmin();
            }
        }
    }
}
